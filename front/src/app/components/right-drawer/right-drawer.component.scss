@use '../../../variables' as vars;

.right-drawer {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  background-color: #1a1a1a;
  overflow-y: auto;
  padding: 10px;
  transition: transform 0.3s ease;
  color: #f0f0f0;
  
  &.desktop {
    width: 300px;
    transform: translateX(0);
    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.3);
    z-index: 100;
    
    &:not(.open) {
      transform: translateX(100%);
    }
  }
  
  &.mobile {
    width: 100%;
    max-width: 350px;
    transform: translateX(100%);
    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.5);
    z-index: 1000;
    
    &.open {
      transform: translateX(0);
    }
  }
}

.analysis-box {
  padding: 10px;
  margin-bottom: 15px;
}

.analysis-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;

  h3 {
    font-size: 18px;
    margin: 0;
    font-weight: 500;
    color: #f0f0f0;
  }

  button {
    display: flex;
    align-items: center;
    gap: 5px;
    background-color: #2d4e27;
    color: white;
    
    &:hover {
      background-color: #376c30;
    }
    
    &.loading {
      pointer-events: none;
    }
  }
}

.error-message {
  color: #ff5252;
  font-size: 14px;
  margin: 10px 0;
  padding: 8px;
  border-radius: 4px;
  background-color: rgba(211, 47, 47, 0.2);
}

.probability-bars {
  margin: 15px 0;
}

.probability-row {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
  
  &.red .player-color,
  &.red .probability-value {
    color: vars.$player-red;
  }
  
  &.blue .player-color,
  &.blue .probability-value {
    color: vars.$player-blue;
  }
  

  
  &.orange .player-color,
  &.orange .probability-value {
    color: vars.$player-orange;
  }
}

.player-color {
  flex: 0 0 60px;
  font-weight: 500;
}

.probability-bar {
  flex: 1;
  height: 15px;
  background-color: #333;
  border-radius: 10px;
  overflow: hidden;
  margin: 0 10px;
  
  .bar-fill {
    height: 100%;
    border-radius: 10px;
    
    .red & {
      background-color: vars.$player-red;
    }
    
    .blue & {
      background-color: vars.$player-blue;
    }
    

    
    .orange & {
      background-color: vars.$player-orange;
    }
  }
}

.probability-value {
  flex: 0 0 40px;
  text-align: right;
  font-weight: 500;
}

mat-divider {
  margin: 20px 0;
  background-color: #333;
}

.game-info {
  .info-header {
    font-size: 16px;
    font-weight: 500;
    margin-bottom: 10px;
    color: #f0f0f0;
  }
  
  .info-row {
    display: flex;
    margin-bottom: 8px;
    font-size: 14px;
    
    .info-label {
      flex: 0 0 120px;
      font-weight: 500;
      color: #aaa;
    }
    
    .info-value {
      flex: 1;
      color: #f0f0f0;
    }
  }
}

// Responsive fallback styles - these are now primarily handled by class-based logic
@media (min-width: 1200px) {
  .right-drawer.desktop {
    // Ensure desktop drawer positioning
    transform: translateX(0) !important;
  }
}

@media (max-width: 1199px) {
  .right-drawer.mobile {
    // Ensure mobile drawer respects open/closed state
    &:not(.open) {
      transform: translateX(100%) !important;
    }
  }
} 